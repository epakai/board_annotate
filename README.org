This project is incomplete. It doesn't do the SVG drawing yet.

This is a tool for annotating circuit boards in Inkscape. To use it you have to:

- write a yaml file with board/chip info
- create an inkscape drawing with a photo
- put a rectangle on top of every chip
- select the rectangles you want to match
- run the extension
- select your yaml file, hit apply
- match chips to images, hit apply
- nothing will happen, this project is unfinished

* Install 

For now, put the board_annotate files in =~/.config/inkscape/extensions=, but rename =board_annotate.glade= to =board_annotate.ui=.

It should appear in Inkscape's =Extensions -> Render= menu as 'Board Annotate'.

* Steps

** Manual prep

- throw the board and chips images into a folder
- edit photos (adjust alignment, crop, rotate, adjust contrast)
    + about 10 minutes for 16 chips using gphoto
- create a yaml config like:

#+BEGIN_SRC yaml
orientation: landscape
board_photo: board.jpg
chips:
  - name: Chip 1
    chip_photo: chip1.jpg
    description: About Chip 1
  - name: Chip 2
    chip photo: chip2.jpg
    description: About Chip 2
#+END_SRC

Landscape is where annotations go above and below. In portrait mode, they go on the left and right.

* Other considerations
- multiple chips of same type, may just have to manually edit in a second box and line
- use connectors for paths (anchors the path end node to the object)
    + I played with this in the GUI for a bit, and it was wonky
    + Maybe there's a nicer way in programming to get consistent connections
    + See [[https://inkscape.org/forums/questions/how-to-anchor-points-from-one-shape-to-another/]]
- sometimes you don't have a chip photo but still want to annotate, or maybe no zoomed images because you know how to take photos
- what if a rectangle is rotated? pick closest midpoint?
- genericize the names, this can probably be used for non-circuit board things
    + Board annotate ->
    + board_photo -> 
    + chip_photo -> 
    + chip_ functions

* Extensions are hard

Given the constraints, here's how I could imagine it working:

- [X] put the image into inkscape
- [X] draw a bunch of rectangles over all the chips
- [X] select them all
- [X] run the extension
- [X] the extension grabs the yaml file
- [X] render the image without the selection rectangles
- [X] the extension displays a list of images with dropdown chip lists
- [X] the user selects the matching chip for each
- [] some math decides best above-below or left-right position
- [] draw all the things

* TODO Things to be done, probably
- parse the yaml more
- can the combo box display everything? not without a custom cell renderer, or moving away from TreeView

* Screenshot

[[screenshot.png]]
